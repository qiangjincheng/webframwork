<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:utils="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
<!--加载位于classpath的名字为db.properties的配置文件-->
    <!--<utils:properties id="db" location="classpath:db.properties"></utils:properties>-->
  <!-- <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>-->
<context:component-scan base-package="com.zhiyou100"></context:component-scan>
    <!--配置数据源-->
    <bean id="abstractXADataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" abstract="true">
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
        <property name="poolSize" value="10"/>
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="30"/>
        <property name="borrowConnectionTimeout" value="60"/>
        <property name="reapTimeout" value="20"/>
        <property name="maxIdleTime" value="60"/>
        <property name="maintenanceInterval" value="60"/>
        <property name="testQuery">
            <value>SELECT 1</value>
        </property>
    </bean>

    <!-- 配置数据源一 -->
    <bean id="dataSource1" parent="abstractXADataSource">
        <property name="uniqueResourceName">
            <value>dataSourceOne</value>
        </property>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">jdbc:mysql://localhost:3306/test</prop>
                <prop key="user">root</prop>
                <prop key="password">123456</prop>
            </props>
        </property>
    </bean>
    <!--配置数据源二-->
    <bean id="aliDataSource" parent="abstractXADataSource">
        <property name="uniqueResourceName">
            <value>dataSourceTwo</value>
        </property>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
        <property name="xaProperties">
            <props>
                <prop key="URL">jdbc:mysql://localhost:3306/test</prop>
                <prop key="user">root</prop>
                <prop key="password">123456</prop>
            </props>
        </property>
    </bean>




    <bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入dataSource-->
        <property name="dataSource" ref="aliDataSource"></property>

        <!--配置mybatis的配置文件路径-->
        <property name="configLocation" value="mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:com/zhiyou100/mapper/*.xml"></property>
    </bean>


    <bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入dataSource-->
        <property name="dataSource" ref="dataSource1"></property>

        <!--配置mybatis的配置文件路径-->
        <property name="configLocation" value="mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:com/zhiyou100/mapper/*.xml"></property>
    </bean>


    <!-- mybatis.spring自动映射，DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory“/>-->
        <property name="sqlSessionFactory" ref="sqlSessionFactory1"/>
        <!--dao层接口所在的包-->
        <property name="basePackage" value="com.zhiyou100.dao1"/>

    </bean>

    <!-- mybatis.spring自动映射，DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory“/>-->
        <property name="sqlSessionFactory" ref="sqlSessionFactory2"/>
        <!--dao层接口所在的包-->
        <property name="basePackage" value="com.zhiyou100.dao2"/>

    </bean>



    <!--&lt;!&ndash; 事务管理 &ndash;&gt;
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="aliDataSource" />
    </bean>-->


    <!--配置分布式事务-->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
        <property name="forceShutdown" value="false"/>
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
      <!--  <property name="transactionTimeout" value="300000"/>-->
    </bean>


    <!--JTA事务管理器-->
    <bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager">
            <ref bean="atomikosTransactionManager"/>
        </property>

        <property name="userTransaction">
            <ref bean="atomikosUserTransaction"/>
        </property>

        <property name="allowCustomIsolationLevels" value="true"/>
    </bean>


    <!--使用注解式的事务管理-->
    <tx:annotation-driven transaction-manager="springTransactionManager"></tx:annotation-driven>


</beans>
